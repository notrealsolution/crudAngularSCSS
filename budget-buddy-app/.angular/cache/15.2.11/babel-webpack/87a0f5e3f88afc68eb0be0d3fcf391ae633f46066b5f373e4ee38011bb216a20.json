{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/expense.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ExpenseFormComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"El campo tipo es requerido\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ExpenseFormComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"El campo tipo debe contener 100 caracteres como m\\u00E1ximo\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ExpenseFormComponent {\n  constructor(expenseService, router) {\n    this.expenseService = expenseService;\n    this.router = router;\n    this.expenseForm = new FormGroup({\n      type: new FormControl('', [Validators.required, Validators.maxLength(100)]),\n      amount: new FormControl('', [Validators.required]),\n      description: new FormControl('', [Validators.required]),\n      expense_date: new FormControl('', [Validators.required])\n    });\n  }\n  saveExpense() {\n    this.expenseService.createExpense(this.expenseForm.value).subscribe(expense => {\n      this.router.navigateByUrl('/gastos');\n    });\n  }\n  hasError(field) {\n    const errorsObject = this.expenseForm.get(field)?.errors ?? {};\n    const errors = Object.keys(errorsObject);\n    if (errors.length && (this.expenseForm.get(field)?.touched || this.expenseForm.get(field)?.dirty)) {\n      return true;\n    }\n    return false;\n  }\n  getCurrentError(field) {\n    const errorsObject = this.expenseForm.get(field)?.errors ?? {};\n    const errors = Object.keys(errorsObject);\n    if (!errors) return '';\n    return errors[0];\n  }\n  static #_ = this.ɵfac = function ExpenseFormComponent_Factory(t) {\n    return new (t || ExpenseFormComponent)(i0.ɵɵdirectiveInject(i1.ExpenseService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ExpenseFormComponent,\n    selectors: [[\"app-expense-form\"]],\n    decls: 16,\n    vars: 8,\n    consts: [[1, \"d-flex\", \"align-items-center\", \"justify-content-between\", \"flex-wrap\", \"mt-5\", \"mb-4\", \"border-bottom\"], [1, \"section-title\", \"mb-4\"], [1, \"d-flex\", \"gap-2\", \"mb-3\"], [\"routerLink\", \"/gasto\", 1, \"btn\", \"btn-outline-secondary\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"mb-5\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"typeInput\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"type\", \"id\", \"typeInput\", \"placeholder\", \"Transporte, Comida, Otros\"], [1, \"invalid-feedback\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"]],\n    template: function ExpenseFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Nuevo gasto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"a\", 3);\n        i0.ɵɵtext(5, \"Cancelar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function ExpenseFormComponent_Template_button_click_6_listener() {\n          return ctx.saveExpense();\n        });\n        i0.ɵɵtext(7, \"Guardar gasto\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function ExpenseFormComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.saveExpense();\n        });\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"label\", 7);\n        i0.ɵɵtext(11, \"Tipo de gasto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 8);\n        i0.ɵɵelementStart(13, \"div\", 9);\n        i0.ɵɵtemplate(14, ExpenseFormComponent_span_14_Template, 2, 0, \"span\", 10);\n        i0.ɵɵtemplate(15, ExpenseFormComponent_span_15_Template, 2, 0, \"span\", 10);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", ctx.expenseForm.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.expenseForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassMapInterpolate1(\"form-control \", ctx.hasError(\"type\") ? \"is-invalid\" : \"\", \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitch\", ctx.getCurrentError(\"type\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"required\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"maxlength\");\n      }\n    },\n    dependencies: [i3.NgSwitch, i3.NgSwitchCase, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\t\\\"use strict\\\";\\n \\t\\n \\t\\n })()[_ngcontent-%COMP%]\\n;\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;ICsB7DC,4BAAiC;IAAAA,0CAA0B;IAAAA,iBAAO;;;;;IAClEA,4BAAkC;IAAAA,2EAAsD;IAAAA,iBAAO;;;ADdrG,OAAM,MAAOC,oBAAoB;EAQ/BC,YACUC,cAA6B,EAC7BC,MAAc;IADd,mBAAc,GAAdD,cAAc;IACd,WAAM,GAANC,MAAM;IAThB,gBAAW,GAAc,IAAIN,SAAS,CAAC;MACrCO,IAAI,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;MAC1EC,MAAM,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACO,QAAQ,CAAC,CAAC;MACjDG,WAAW,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACO,QAAQ,CAAC,CAAC;MACtDI,YAAY,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACO,QAAQ,CAAC;KACvD,CAAC;EAKA;EACFK,WAAW;IACT,IAAI,CAACR,cAAc,CAACS,aAAa,CAAC,IAAI,CAACC,WAAW,CAACC,KAAK,CAAC,CAACC,SAAS,CAAEC,OAAO,IAAG;MAC7E,IAAI,CAACZ,MAAM,CAACa,aAAa,CAAC,SAAS,CAAC;IACtC,CAAC,CAAC;EACJ;EACAC,QAAQ,CAACC,KAAa;IACpB,MAAMC,YAAY,GAAG,IAAI,CAACP,WAAW,CAACQ,GAAG,CAACF,KAAK,CAAC,EAAEG,MAAM,IAAI,EAAE;IAC9D,MAAMA,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACJ,YAAY,CAAC;IACxC,IAAIE,MAAM,CAACG,MAAM,KAAK,IAAI,CAACZ,WAAW,CAACQ,GAAG,CAACF,KAAK,CAAC,EAAEO,OAAO,IAAI,IAAI,CAACb,WAAW,CAACQ,GAAG,CAACF,KAAK,CAAC,EAAEQ,KAAK,CAAC,EAAE;MACjG,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;EACAC,eAAe,CAAET,KAAa;IAC5B,MAAMC,YAAY,GAAG,IAAI,CAACP,WAAW,CAACQ,GAAG,CAACF,KAAK,CAAC,EAAEG,MAAM,IAAI,EAAE;IAC9D,MAAMA,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACJ,YAAY,CAAC;IACxC,IAAG,CAACE,MAAM,EAAE,OAAO,EAAE;IACrB,OAAOA,MAAM,CAAC,CAAC,CAAC;EAClB;EAAC;qBA9BUrB,oBAAoB;EAAA;EAAA;UAApBA,oBAAoB;IAAA4B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCVjCjC,8BAAiG;QAChEA,2BAAW;QAAAA,iBAAK;QAC/CA,8BAA+B;QAC4BA,wBAAQ;QAAAA,iBAAI;QACrEA,iCAKC;QAFCA;UAAA,OAASkC,iBAAa;QAAA,EAAC;QAExBlC,6BAAa;QAAAA,iBAAS;QAG3BA,+BAAwE;QAA3BA;UAAA,OAAYkC,iBAAa;QAAA,EAAC;QACrElC,8BAAkB;QAC0BA,8BAAa;QAAAA,iBAAQ;QAC/DA,4BAMC;QACDA,+BAAmE;QACjEA,0EAAkE;QAClEA,0EAA+F;QACjGA,iBAAM;;;QAjBJA,eAAgC;QAAhCA,kDAAgC;QAInBA,eAAyB;QAAzBA,2CAAyB;QAMtCA,eAA+D;QAA/DA,wFAA+D;QAInCA,eAAoC;QAApCA,sDAAoC;QACzDA,eAAwB;QAAxBA,yCAAwB;QACxBA,eAAyB;QAAzBA,0CAAyB","names":["FormControl","FormGroup","Validators","i0","ExpenseFormComponent","constructor","expenseService","router","type","required","maxLength","amount","description","expense_date","saveExpense","createExpense","expenseForm","value","subscribe","expense","navigateByUrl","hasError","field","errorsObject","get","errors","Object","keys","length","touched","dirty","getCurrentError","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Cursos\\crudAngularLaravel\\budget-buddy-app\\src\\app\\components\\expense-form\\expense-form.component.ts","C:\\Cursos\\crudAngularLaravel\\budget-buddy-app\\src\\app\\components\\expense-form\\expense-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ExpenseService } from '../../services/expense.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-expense-form',\n  templateUrl: './expense-form.component.html',\n  styleUrls: ['./expense-form.component.scss']\n})\nexport class ExpenseFormComponent {\n  expenseForm: FormGroup = new FormGroup({\n    type: new FormControl('',[Validators.required, Validators.maxLength(100)]),\n    amount: new FormControl('',[Validators.required]),\n    description: new FormControl('',[Validators.required]),\n    expense_date: new FormControl('',[Validators.required]),\n  });\n\n  constructor(\n    private expenseService:ExpenseService,\n    private router: Router\n  ){}\n  saveExpense(): void {\n    this.expenseService.createExpense(this.expenseForm.value).subscribe( expense => {\n      this.router.navigateByUrl('/gastos');\n    })\n  }\n  hasError(field: string): boolean {\n    const errorsObject = this.expenseForm.get(field)?.errors ?? {};\n    const errors = Object.keys(errorsObject);\n    if( errors.length && (this.expenseForm.get(field)?.touched || this.expenseForm.get(field)?.dirty) ){\n      return true;\n    }\n    return false;\n  }\n  getCurrentError( field: string ):string {\n    const errorsObject = this.expenseForm.get(field)?.errors ?? {};\n    const errors = Object.keys(errorsObject);\n    if(!errors) return '';\n    return errors[0]\n  }\n}\n","<div class=\"d-flex align-items-center justify-content-between flex-wrap mt-5 mb-4 border-bottom\">\n  <h2 class=\"section-title mb-4\">Nuevo gasto</h2>\n  <div class=\"d-flex gap-2 mb-3\">\n    <a routerLink=\"/gasto\" class=\"btn btn-outline-secondary\">Cancelar</a>\n    <button\n      type=\"button\"\n      class=\"btn btn-primary\"\n      (click)=\"saveExpense()\"\n      [disabled]=\"expenseForm.invalid\"\n    >Guardar gasto</button>\n  </div>\n</div>\n<form class=\"mb-5\" [formGroup]=\"expenseForm\" (ngSubmit)=\"saveExpense()\">\n  <div class=\"mb-3\">\n    <label for=\"typeInput\" class=\"form-label\">Tipo de gasto</label>\n    <input\n      type=\"text\"\n      formControlName=\"type\"\n      class=\"form-control {{ hasError('type') ? 'is-invalid' : '' }}\"\n      id=\"typeInput\"\n      placeholder=\"Transporte, Comida, Otros\"\n    >\n    <div class=\"invalid-feedback\" [ngSwitch]=\"getCurrentError('type')\">\n      <span *ngSwitchCase=\"'required'\">El campo tipo es requerido</span>\n      <span *ngSwitchCase=\"'maxlength'\">El campo tipo debe contener 100 caracteres como máximo</span>\n    </div>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}