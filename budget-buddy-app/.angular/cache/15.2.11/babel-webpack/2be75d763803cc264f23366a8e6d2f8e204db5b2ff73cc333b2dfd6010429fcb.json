{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/expense.service\";\nimport * as i2 from \"@angular/router\";\nexport class ExpenseFormComponent {\n  constructor(expenseService, router) {\n    this.expenseService = expenseService;\n    this.router = router;\n    this.expenseForm = new FormGroup({\n      type: new FormControl('', [Validators.required, Validators.maxLength(100)]),\n      amount: new FormControl('', [Validators.required]),\n      description: new FormControl('', [Validators.required]),\n      expense_date: new FormControl('', [Validators.required])\n    });\n  }\n  saveExpense() {\n    this.expenseService.createExpense(this.expenseForm.value).subscribe(expense => {\n      this.router.navigateByUrl('/gastos');\n    });\n  }\n  hasError(field) {\n    const errorsObject = this.expenseForm.get(field)?.errors ?? {};\n    const errors = Object.keys(errorsObject);\n    if (errors.length && (this.expenseForm.get(field)?.touched || this.expenseForm.get(field)?.dirty)) {\n      return true;\n    }\n    return false;\n  }\n  getCurrentError(field) {\n    const errorsObject = this.expenseForm.get(field)?.errors ?? {};\n    const errors = Object.keys(errorsObject);\n    if (!errors) return '';\n    return errors[0];\n  }\n  static #_ = this.ɵfac = function ExpenseFormComponent_Factory(t) {\n    return new (t || ExpenseFormComponent)(i0.ɵɵdirectiveInject(i1.ExpenseService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ExpenseFormComponent,\n    selectors: [[\"app-expense-form\"]],\n    decls: 1,\n    vars: 0,\n    consts: [[1, \"d-flex\", \"align-items-center\", \"justify-content-between\", \"flex-wrap\", \"mt-5\", \"mb-4\", \"border-bottom\"]],\n    template: function ExpenseFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n    },\n    styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\t\\\"use strict\\\";\\n \\t\\n \\t\\n })()[_ngcontent-%COMP%]\\n;\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;AASnE,OAAM,MAAOC,oBAAoB;EAQ/BC,YACUC,cAA6B,EAC7BC,MAAc;IADd,mBAAc,GAAdD,cAAc;IACd,WAAM,GAANC,MAAM;IAThB,gBAAW,GAAc,IAAIL,SAAS,CAAC;MACrCM,IAAI,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACM,QAAQ,EAAEN,UAAU,CAACO,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;MAC1EC,MAAM,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACM,QAAQ,CAAC,CAAC;MACjDG,WAAW,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACM,QAAQ,CAAC,CAAC;MACtDI,YAAY,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACM,QAAQ,CAAC;KACvD,CAAC;EAKA;EACFK,WAAW;IACT,IAAI,CAACR,cAAc,CAACS,aAAa,CAAC,IAAI,CAACC,WAAW,CAACC,KAAK,CAAC,CAACC,SAAS,CAAEC,OAAO,IAAG;MAC7E,IAAI,CAACZ,MAAM,CAACa,aAAa,CAAC,SAAS,CAAC;IACtC,CAAC,CAAC;EACJ;EACAC,QAAQ,CAACC,KAAa;IACpB,MAAMC,YAAY,GAAG,IAAI,CAACP,WAAW,CAACQ,GAAG,CAACF,KAAK,CAAC,EAAEG,MAAM,IAAI,EAAE;IAC9D,MAAMA,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACJ,YAAY,CAAC;IACxC,IAAIE,MAAM,CAACG,MAAM,KAAK,IAAI,CAACZ,WAAW,CAACQ,GAAG,CAACF,KAAK,CAAC,EAAEO,OAAO,IAAI,IAAI,CAACb,WAAW,CAACQ,GAAG,CAACF,KAAK,CAAC,EAAEQ,KAAK,CAAC,EAAE;MACjG,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;EACAC,eAAe,CAAET,KAAa;IAC5B,MAAMC,YAAY,GAAG,IAAI,CAACP,WAAW,CAACQ,GAAG,CAACF,KAAK,CAAC,EAAEG,MAAM,IAAI,EAAE;IAC9D,MAAMA,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACJ,YAAY,CAAC;IACxC,IAAG,CAACE,MAAM,EAAE,OAAO,EAAE;IACrB,OAAOA,MAAM,CAAC,CAAC,CAAC;EAClB;EAAC;qBA9BUrB,oBAAoB;EAAA;EAAA;UAApBA,oBAAoB;IAAA4B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCVjCC,yBAEM","names":["FormControl","FormGroup","Validators","ExpenseFormComponent","constructor","expenseService","router","type","required","maxLength","amount","description","expense_date","saveExpense","createExpense","expenseForm","value","subscribe","expense","navigateByUrl","hasError","field","errorsObject","get","errors","Object","keys","length","touched","dirty","getCurrentError","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Cursos\\crudAngularLaravel\\budget-buddy-app\\src\\app\\components\\expense-form\\expense-form.component.ts","C:\\Cursos\\crudAngularLaravel\\budget-buddy-app\\src\\app\\components\\expense-form\\expense-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ExpenseService } from '../../services/expense.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-expense-form',\n  templateUrl: './expense-form.component.html',\n  styleUrls: ['./expense-form.component.scss']\n})\nexport class ExpenseFormComponent {\n  expenseForm: FormGroup = new FormGroup({\n    type: new FormControl('',[Validators.required, Validators.maxLength(100)]),\n    amount: new FormControl('',[Validators.required]),\n    description: new FormControl('',[Validators.required]),\n    expense_date: new FormControl('',[Validators.required]),\n  });\n\n  constructor(\n    private expenseService:ExpenseService,\n    private router: Router\n  ){}\n  saveExpense(): void {\n    this.expenseService.createExpense(this.expenseForm.value).subscribe( expense => {\n      this.router.navigateByUrl('/gastos');\n    })\n  }\n  hasError(field: string): boolean {\n    const errorsObject = this.expenseForm.get(field)?.errors ?? {};\n    const errors = Object.keys(errorsObject);\n    if( errors.length && (this.expenseForm.get(field)?.touched || this.expenseForm.get(field)?.dirty) ){\n      return true;\n    }\n    return false;\n  }\n  getCurrentError( field: string ):string {\n    const errorsObject = this.expenseForm.get(field)?.errors ?? {};\n    const errors = Object.keys(errorsObject);\n    if(!errors) return '';\n    return errors[0]\n  }\n}\n","<div class=\"d-flex align-items-center justify-content-between flex-wrap mt-5 mb-4 border-bottom\">\n\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}